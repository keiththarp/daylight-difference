{"version":3,"sources":["reportWebVitals.ts","views/About/About.tsx","components/CityToCoords.tsx","api/api.ts","views/Differentiator/Differentiator.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","About","className","CityToCoords","props","useState","dayLength","setDayLength","searchResults","setSearchResults","input","setInput","searchTerm","setSearchTerm","chosenCity","setChosenCity","regex","chosenHandler","lat","lng","city","replace","date","apiUrl","axios","get","callSunTimes","res","data","results","day_length","displayData","cityNumber","console","log","onChange","event","currentTarget","value","toLowerCase","placeholder","onClick","process","findCoords","length","map","index","geometry","formatted","today","DateTime","local","toFormat","Differentiator","setDate","city1","daylight1","city2","daylight2","locationData","setLocationData","dataSetter","daylight","cityName","DifferenceDisplayer","dl1","toString","dl2","d1","fromISO","d2","difference","diff","useEffect","App","basename","path","exact","component","dotenv","resolve","__dirname","debug","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73eb9181.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\n\nfunction About(): JSX.Element {\n\n\n  return (\n\n\n    <div className=\"about-screen\">\n\n      <h2 className=\"view-title\">This is the Differentiator</h2>\n\n    </div>\n\n  )\n\n};\nexport default About;","import React, { useState } from 'react';\nimport axios from 'axios'\nimport { findCoords, callSunTimes } from '../api/api'\nimport './components.css';\n\nfunction CityToCoords(props: any): JSX.Element {\n\n  const [dayLength, setDayLength] = useState(0);\n  const [searchResults, setSearchResults] = useState<any>([])\n  const [input, setInput] = useState<string>(\"\");\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n  const [chosenCity, setChosenCity] = useState(\"\");\n  const regex = /,(.*)/\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInput(event.currentTarget.value);\n\n    setSearchTerm(event.currentTarget.value.toLowerCase())\n  }\n  const searchHandler = () => {\n    findCoords(searchTerm).then((res) => {\n      setSearchResults(res.data.results)\n      setDayLength(0)\n      console.log(res);\n    })\n  }\n\n  const chosenHandler = (lat: number, lng: number, city: string) => {\n    setChosenCity(city.replace(regex, \"\"))\n\n    callSunTimes(lat, lng, props.date).then((res) => {\n      setDayLength(res.data.results.day_length)\n      setSearchResults([])\n      props.displayData(props.cityNumber, res.data.results.day_length, city.replace(regex, \"\"))\n      console.log(res.data);\n    });\n  }\n\n  return (\n\n    <div>\n      <div className=\"about-screen\">\n        <input\n          className=\"city-search-input m-3\"\n          onChange={handleSearchChange}\n          value={input}\n          placeholder=\"Search Location\"\n        />\n        <button onClick={searchHandler}>Search</button>\n        {searchResults.length > 0\n          ?\n          <div className=\"row justify-content-center mt-2\">\n            <div className=\"col-auto border border-secondary bg-light\">\n              <h4 className=\"mt-2\">Choose the correct location</h4>\n              <ul className=\"city-list\">\n                {searchResults.map(function (city: any, index: number) {\n                  return <li key={index}>\n                    <button\n                      onClick={() => {\n                        chosenHandler(city.geometry.lat, city.geometry.lng, city.formatted);\n\n                      }\n                      }\n                      className=\"city-option-button\"\n                    >\n                      +\n                    </button>\n                    {city.formatted}\n                  </li>\n                })}\n              </ul>\n            </div>\n          </div>\n          : null}\n        <div>{dayLength !== 0 && <div>{chosenCity} has <span className=\"day-length\">{dayLength}</span> of daylight.</div>}</div>\n      </div>\n    </div>\n  )\n};\nexport default CityToCoords;","import React from 'react';\nimport axios from 'axios'\n\n\n// Take in city name and return possible matches containing coordinates\nconst findCoords = (searchTerm: string) => {\n  const apiUrl = `https://api.opencagedata.com/geocode/v1/json?q=${searchTerm}&key=${process.env.REACT_APP_COORDS_API_PW}`;\n  return axios.get(apiUrl);\n};\n\nconst callSunTimes = (lat: number, lng: number, date: string) => {\n  const apiUrl = `https://api.sunrise-sunset.org/json?lat=${lat}&lng=${lng}&date=${date}`;\n  return axios.get(apiUrl);\n}\n\nexport {\n  findCoords,\n  callSunTimes\n};\n","import React, { useEffect, useState } from 'react';\nimport CityToCoords from '../../components/CityToCoords';\nimport { DateTime } from \"luxon\";\nconst today = DateTime.local().toFormat('yyyy-MM-dd')\n\nfunction Differentiator(): JSX.Element {\n\n  const [date, setDate] = useState<string>(today);\n\n\n\n  const [locationData, setLocationData] = useState({\n    city1: \"\",\n    daylight1: 0,\n    city2: \"\",\n    daylight2: 0\n  })\n  const { city1, daylight1, city2, daylight2 } = locationData\n\n  const dataSetter = (cityNumber: number, daylight: number, cityName: string) => {\n    if (cityNumber === 1) {\n      setLocationData({\n        ...locationData,\n        city1: cityName,\n        daylight1: daylight\n      })\n    } else {\n      setLocationData({\n        ...locationData,\n        city2: cityName,\n        daylight2: daylight\n      })\n    }\n  }\n\n  const handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDate(event.currentTarget.value);\n  }\n\n  const DifferenceDisplayer = () => {\n    const dl1 = daylight1.toString();\n    const dl2 = daylight2.toString();\n    const d1 = DateTime.fromISO(dl1)\n    const d2 = DateTime.fromISO(dl2)\n\n    if (daylight1 > daylight2) {\n      const difference = d1.diff(d2, ['hours', 'minutes', 'seconds']).toFormat('hh:mm:ss')\n      return <div>{city1} has {difference} more daylight than {city2}.</div>\n    } else {\n      const difference = d2.diff(d1, ['hours', 'minutes', 'seconds']).toFormat('hh:mm:ss')\n      return <div>{city2} has {difference} more daylight than {city1}.</div>\n    }\n  }\n  useEffect(() => {\n    if (daylight1 && daylight2) {\n      DifferenceDisplayer()\n    }\n  }, [daylight1, daylight2, locationData])\n\n  return (\n    <div>\n      <div className=\"about-screen border border-primary\">\n        <h1>Daylight Difference Determiner</h1>\n        <p>This app determines the difference in amount of daylight time between two giving locations.</p>\n      </div>\n      <div>\n        Enter a date yyyy-mm-dd <input\n          className=\"city-search-input m-3\"\n          onChange={handleDateChange}\n          value={date}\n          placeholder=\"YYYY-MM-DD\"\n        />\n      </div>\n      <div>\n        <h3>Enter city name for location 1</h3>\n        <CityToCoords displayData={dataSetter} cityNumber={1} date={date} />\n      </div>\n      <div className=\"mt-4\">\n        <h3>Enter city name for location 2</h3>\n        <CityToCoords displayData={dataSetter} cityNumber={2} date={date} />\n      </div>\n      {(daylight1 && daylight2)\n        ?\n        <div className=\"py-3 bg-light\"><DifferenceDisplayer /></div>\n        : null}\n    </div>\n  )\n};\nexport default Differentiator;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport About from './views/About/About';\nimport Differentiator from './views/Differentiator/Differentiator'\nimport CityToCoords from './components/CityToCoords'\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename=\"/daylight-difference\">\n        <Switch>\n          <Route path=\"/\" exact component={Differentiator} />\n          <Route path=\"/about\" exact component={About} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { resolve } from 'path';\nimport * as dotenv from 'dotenv';\ndotenv.config({\n  path: resolve(__dirname, '../.env'),\n  debug: true\n});\n\nrequire('dotenv').config();\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}